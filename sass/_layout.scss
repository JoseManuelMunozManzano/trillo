.container {
  // The container can decrease if there is not enough space to display our 1200px=120rem
  // So, if the viewport is less than 1200px then we simply occupy 100% of the available
  // viewport width
  max-width: 120rem;

  // Centering
  margin: 8rem auto;

  background-color: var(--color-grey-light-1);
  box-shadow: var(--shadow-dark);

  // For testing purposes
  min-height: 50rem;
}

.header {
  font-size: 1.4rem;
  height: 7rem;
  background-color: #fff;
  border-bottom: var(--line);

  display: flex;
  justify-content: space-between;
  align-items: center;
}

.content {
  display: flex;
}

.sidebar {
  background-color: var(--color-grey-dark-1);

  // The element is not going to grow, not going to shrink, we always want to keep at 18%
  // Generally, with percentages it would be better to allow it to shrink, but right now
  // it's good like this.
  flex: 0 0 18%;

  display: flex;
  flex-direction: column;
  justify-content: space-between;
}

.hotel-view {
  background-color: #fff;

  // For testing purposes, to pretend that we have content. Later we will remove this
  //height: 80rem;

  // Now the element should grow as much as it can
  flex: 1;
}

.detail {
  display: flex;
  padding: 4.5rem;
  background-color: var(--color-grey-light-1);
  border-bottom: var(--line);
}

.description {
  font-size: 1.4rem;
  background-color: #fff;
  box-shadow: var(--shadow-light);
  padding: 3rem;

  // When I'm using a percentage value here I set the other two to 0
  flex: 0 0 60%;
  margin-right: 4.5rem;
}

.user-reviews {
  background-color: yellowgreen;
  // The remaining space
  flex: 1;
}
