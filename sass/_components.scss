////////////////////////////////////////////
// LOGO
.logo {
  height: 3.25rem;
  margin-left: 2rem;
}

////////////////////////////////////////////
// SEARCH
.search {
  flex: 0 0 40%;

  // A flex item is becoming a flex container. Nested flexbox
  display: flex;
  align-items: center; // centers along the cross-axis
  justify-content: center; // centers along the main axis

  &__input {
    // input element doesn't inherit the font-family of the global document
    font-family: inherit;
    font-size: inherit;
    color: inherit;
    background-color: var(--color-grey-light-2);
    border: none;
    padding: 0.7rem 2rem;
    border-radius: 100px;

    // It's 90% because when we clicked in it, the input will expand to 100%
    width: 90%;
    transition: all 0.2s;

    // We want the botton to be like on top on the input
    margin-right: -3.25rem;

    &:focus {
      outline: none;
      width: 100%;
      background-color: var(--color-grey-light-3);
    }

    &::-webkit-input-placeholder {
      font-weight: 100;
      color: var(--color-grey-light-4);
    }
  }

  // Selecting the sibling of the selected input
  &__input:focus + &__button {
    background-color: var(--color-grey-light-3);
  }

  &__button {
    border: none;
    background-color: var(--color-grey-light-2);

    &:focus {
      outline: none;
    }

    &:active {
      transform: translateY(2px);
    }
  }

  &__icon {
    // Formatting a SVG icon: we have to set its height and its width
    height: 2rem;
    width: 2rem;

    // Changing the color of the SVG icon
    fill: var(--color-grey-dark-3);
  }
}

////////////////////////////////////////////
// USER NAVIGATION
.user-nav {
  // We override align-items:center from .header
  align-self: stretch;

  // Again a flex-item is also at the same time a flex container. Nested flexbox
  display: flex;
  align-items: center;

  // Selecting direct children
  & > * {
    padding: 0 2rem;
    cursor: pointer;
    height: 100%;

    // Third level of flex containers
    display: flex;
    align-items: center;
  }

  & > *:hover {
    background-color: var(--color-grey-light-2);
  }

  &__icon-box {
    position: relative;
  }

  &__icon {
    height: 2.25rem;
    width: 2.25rem;
    fill: var(--color-grey-dark-2);
  }

  &__notification {
    font-size: 0.8rem;
    height: 1.75rem;
    width: 1.75rem;
    border-radius: 50%;
    background-color: var(--color-primary);
    color: #fff;
    position: absolute;
    top: 1.5rem;
    right: 1.1rem;

    // Centering text both horizontally and vertically.
    // We can actually use flexbox for that as well.
    // So flexbox doesn't only work when we have child elements, but it works with text as
    // well.
    // Four levels of flexbox, one inside of another
    display: flex;
    justify-content: center;
    align-items: center;
  }

  &__user-photo {
    height: 3.75rem;
    border-radius: 50%;
    margin-right: 1rem;
  }
}
